:root {
  --button-size: calc(3vw + 2.2vh);
}

* {
  box-sizing: border-box;
}

body {
  position: relative;
  margin: 0;
  min-height: 100%;
  background: rgb(30, 30, 30);
  font-family: "Heebo", sans-serif;
  font-weight: 900;
  font-size: 16px;
  overflow-x: hidden;
  color: white;
  min-height: 100vh;
}

video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  mix-blend-mode: overlay;
  object-fit: cover;
  opacity: 0.02;
}

time {
  display: block;
  position: fixed;
  top: 0;
  line-height: 0.72;
  z-index: 1;
  word-break: break-all;
  color: red;
  mix-blend-mode: difference;
  pointer-events: none;
}

h1 {
  margin-left: auto;
  margin-right: 0;
  margin-top: 0;
  font-size: calc(4vw + 3vh);
}

h1 label {
  display: inline-block;
  width: var(--button-size);
  height: var(--button-size);
  background: none;
  border: none;
  border-radius: 0;
  padding: 0;
  margin: 0;
  font-size: inherit;
  will-change: transform;
  transition: transform 0.5s;
  cursor: pointer;
}

h1 label:hover,
h1 label:active,
#reveal:focus ~ h1 label {
  transform: rotateZ(15deg);
}

#reveal:checked ~ h1 label:hover,
#reveal:checked ~ h1 label:active {
  transform: rotateZ(255deg);
}

#reveal:focus ~ h1 label,
#reveal:checked ~ h1 label {
  outline: 7px dashed magenta;
  outline-offset: 4px;
}

h1 label span {
  display: block;
  height: 14.28%;
  background: white;
}

h1 label span + span {
  margin-top: 14.28%;
}

h2 {
  font-size: calc(3vw + 2.2vh);
}

p {
  font-size: calc(2vw + 1.5vh);
}

.small {
  display: block;
  font-size: calc(1.75vw + 1vh);
}

nav {
  display: flex;
  align-items: center;
}

nav a {
  display: block;
  text-decoration: none;
}

nav a:hover,
nav a:focus {
  outline: 7px dashed magenta;
  outline-offset: 4px;
}

nav a + a {
  margin-left: 2em;
}

nav a svg {
  display: block;
  width: calc(2vw + 1.5vh);
  height: calc(2vw + 1.5vh);
}

.reveal {
  display: none;
}

input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  visibility: hidden;
}

#reveal:checked ~ .reveal {
  display: block;
}

#reveal:checked ~ h1 label {
  transform: rotateZ(270deg);
}

main {
  padding-bottom: 10rem;
}

@media screen and (orientation: landscape) {
  time {
    left: -1.5vh;
    width: 40vh;
    letter-spacing: -2.2vh;
    font-size: 36vh;
  }

  main {
    padding-top: 60vh;
    margin-left: 45vh;
    margin-right: 5vh;
  }

  h1 label {
    margin-right: calc(var(--button-size) - 0.25em);
  }
}

@media screen and (orientation: portrait) {
  time {
    left: -1vw;
    width: 105vw;
    letter-spacing: -5vw;
    font-size: 51vw;
    transform: scale(1.05);
  }

  h1 {
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
    text-align: center;
    line-height: 1;
  }

  h1 label {
    margin-top: var(--button-size);
  }

  h1 span span {
    display: block;
  }

  main {
    padding-top: 75vw;
    margin-right: 2rem;
    margin-left: 2rem;
  }
}

.background,
.background::before {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.background {
  z-index: -1;
  overflow: hidden;
}

.background::before {
  content: "";
  display: block;
  background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
}

.background-image {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  object-fit: cover;
  object-position: center top;
  z-index: -1;
}

.background-image + .background-image {
  top: 100vh;
  transform: rotateZ(180deg) rotateY(180deg);
}

.noise-wrapper {
  overflow: hidden;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
}

.btn {
  border: none;
  width: 48px;
}
.btn:before,
.btn:after {
  content: "";
  height: 9px;
  width: 100%;
  background: white;
  display: block;
  margin: 5px 0;
}

.noise {
  height: 300%;
  width: 300%;
  position: absolute;
  top: -100%;
  left: -100%;
  background-repeat: repeat;
  background-image: url(/noise.png);
  opacity: 0.8;
  will-change: transform;
  z-index: 10002;
  pointer-events: none;
  user-select: none;
  animation: grain 2s steps(10) infinite;
}

@keyframes grain {
  0%,
  to {
    transform: translate(0);
  }

  10% {
    transform: translate(-510px, -510px);
  }

  20% {
    transform: translate(-515px, 55px);
  }

  30% {
    transform: translate(57px, -525px);
  }

  40% {
    transform: translate(521px, 525px);
  }

  50% {
    transform: translate(-525px, 510px);
  }

  60% {
    transform: translate(515px, 55px);
  }

  70% {
    transform: translate(50px, 515px);
  }

  80% {
    transform: translate(525px, 535px);
  }

  90% {
    transform: translate(-510px, 510px);
  }
}

@media (prefers-reduced-motion: reduce) {
  * {
    animation: none !important;
    transition: none !important;
  }
}
